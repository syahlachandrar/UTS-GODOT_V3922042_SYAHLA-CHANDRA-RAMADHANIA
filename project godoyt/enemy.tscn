[gd_scene load_steps=7 format=3 uid="uid://ce4omnjg6ner7"]

[ext_resource type="Texture2D" uid="uid://xid4d6pmukcj" path="res://asset/knight-character-sprites-pixel-art/Knight_1/Walk.png" id="6_44kdx"]

[sub_resource type="GDScript" id="GDScript_5ofsf"]
script/source = "class_name enemy extends CharacterBody2D

enum State {
 WALKING,
 DEAD,
 IDLE,
}

const WALK_SPEED = 100.0

var _state := State.WALKING

@onready var gravity: int = ProjectSettings.get(\"physics/2d/default_gravity\")
@onready var platform_detector := $PlatformDetector as RayCast2D
@onready var floor_detector_left := $PlatformDetectorLeft as RayCast2D
@onready var floor_detector_right := $PlatformDetectorRight as RayCast2D
@onready var sprite := $Sprite2D as Sprite2D
@onready var animation_player := $AnimationPlayer as AnimationPlayer


func _physics_process(delta: float) -> void:
 if _state == State.WALKING and velocity.is_zero_approx():
  velocity.x = WALK_SPEED
 velocity.y += gravity * delta
 if not floor_detector_left.is_colliding():
  velocity.x = WALK_SPEED
 elif not floor_detector_right.is_colliding():
  velocity.x = -WALK_SPEED

 if is_on_wall():
  velocity.x = -velocity.x

 move_and_slide()

 if velocity.x > 0.0:
  sprite.scale.x = 1.0
 elif velocity.x < 0.0:
  sprite.scale.x = -1.0

 var animation := get_new_animation()
 if animation != animation_player.current_animation:
  animation_player.play(animation)


func destroy() -> void:
 _state = State.DEAD
 velocity = Vector2.ZERO


func get_new_animation() -> StringName:
 var animation_new: StringName
 if _state == State.WALKING:
  if velocity.x == 0:
   animation_new = &\"idle\"
  else:
   animation_new = &\"move\"
 else:
  animation_new = &\"destroy\"
 return animation_new
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_gftmv"]
radius = 12.0
height = 50.0

[sub_resource type="Animation" id="Animation_wavwj"]
resource_name = "move"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [0, 1]
}

[sub_resource type="Animation" id="Animation_hpaqq"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_6ayg5"]
_data = {
"RESET": SubResource("Animation_hpaqq"),
"move": SubResource("Animation_wavwj")
}

[node name="enemy" type="CharacterBody2D"]
script = SubResource("GDScript_5ofsf")

[node name="Sprite2D" type="Sprite2D" parent="."]
position = Vector2(-6, -17)
scale = Vector2(0.722222, 0.790698)
texture = ExtResource("6_44kdx")
hframes = 8

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -12)
shape = SubResource("CapsuleShape2D_gftmv")

[node name="PlatformDetector" type="RayCast2D" parent="."]

[node name="PlatformDetectorRight" type="RayCast2D" parent="."]
position = Vector2(10, -8)

[node name="PlatformDetectorLeft" type="RayCast2D" parent="."]
position = Vector2(-10, -8)

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_6ayg5")
}
